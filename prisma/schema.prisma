generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  USER
  ADMIN
}

enum Gender {
  MALE
  FEMALE
  OTHER
}

model User {
  id             Int       @id @default(autoincrement())
  username       String    @unique
  email          String    @unique
  password       String
  location       String?
  websiteLink    String?
  gender         Gender    @default(MALE)
  role           Role      @default(USER)
  firstName      String
  lastName       String
  profilePicture String?
  bio            String?
  jobTitle       String?
  phoneNumber    String?
  createdAt      DateTime  @default(now())
  updatedAt      DateTime  @updatedAt
  posts          Post[]
  Comment        Comment[]
}

model Community {
  id        Int      @id @default(autoincrement())
  name      String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Post {
  id            Int       @id @default(autoincrement())
  title         String
  slug          String    @unique
  content       String?
  author        User      @relation(fields: [authorId], references: [id])
  authorId      Int
  featuredImage String?
  published     Boolean   @default(false)
  createdAt     DateTime  @default(now()) @map("created_at")
  updatedAt     DateTime  @updatedAt
  comments      Comment[]

  // if we have a lot of reads we can use slugs to faster data retrieval
  @@index([slug])
}

model Comment {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  content   String
  author    User     @relation(fields: [authorId], references: [id])
  authorId  Int
  // Other fields
  post      Post     @relation(fields: [postId], references: [id]) // A comment can have one post
  postId    Int
}
